{"version":3,"sources":["pages/Home.js","components/Navbar.js","components/DashboardEvents.js","pages/AdminDashboard.js","pages/UserDashboard.js","pages/Event.js","components/ReadyEvents.js","pages/NewUser.js","pages/ReturningUser.js","pages/AdminLogin.js","pages/CheckInForm.js","pages/MagicLink.js","App.js","index.js"],"names":["Home","props","useState","useEffect","className","to","Navbar","role","aria-label","DashboardEvents","events","setEvents","a","fetch","res","json","resJson","alert","fetchData","map","event","index","key","name","_id","AdminDashboard","UserDashboard","Event","isLoading","setIsLoading","setEvent","isCheckInReady","setIsCheckInReady","match","params","id","checkInReady","setCheckInReady","e","preventDefault","method","headers","then","response","ok","fetchEvent","location","date","city","state","onClick","ReadyEvents","console","log","length","newUser","returningUser","NewUser","ReturningUser","AdminLogin","CheckInForm","questions","setQuestions","userType","newOrReturning","firstName","lastName","email","currentRole","desiredRole","answer","formInput","setFormInput","fetchQuestions","handleInputChange","currentTarget","value","submitForm","userForm","formToSubmit","JSON","stringify","checkInNewUser","history","push","error","checkInReturningUser","onSubmit","placeholder","type","onChange","htmlFor","toString","forEach","question","questionText","MagicLink","forwardRequest","setTimeout","routes","path","Component","App","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47b777ea.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nimport '../sass/Home.scss';\n// import '../sass/Home-media-queries.scss';\n\nconst Home = (props) => {\n    const [isLoading, setIsLoading] = useState(false);\n    // const [event, setEvent] = useState([]);\n    const [isError, setIsError] = useState(null);\n\n    // async function fetchData() {\n    //     try {\n    //         const res = await fetch(`http://localhost:4000/api/events/${props.match.params.id}`);\n    //         const resJson = await res.json();\n    //         setEvent(resJson);\n    //     } catch(error) {\n    //         setIsError(error);\n    //         alert(error);\n    //     }\n    // }\n\n    useEffect(() => {\n        // fetchData();\n\n    }, []);\n\n    return (\n        <div className=\"flexcenter-container\">\n            <div className=\"home\">\n                <div className=\"home-headers\">\n                    <h1>VRMS</h1>\n                    <h2>Volunteer Relationship Management System</h2>\n                </div>\n\n                <div className=\"home-buttons\">\n                    <Link className=\"home-button\" to={'/new'}>New</Link>\n                    <Link className=\"home-button\" to={'/returning'}>Returning</Link>\n                </div>\n                 \n                <div className=\"login-button\">\n                    <Link className=\"home-button\" to={'/login'}>Login</Link>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Home;\n    ","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../sass/Navbar.scss';\n\nconst Navbar = (props) => {\n\n    return (\n        <div className=\"nav-wrapper\">\n            <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                <div className=\"navbar-brand\">\n                    <Link to=\"/\">\n                        Home\n                    </Link>\n                </div>\n\n                <div className=\"navbar-buttons\">\n                    <Link className=\"navbar-button primary\" to=\"/new\">New User</Link>\n                    <Link className=\"navbar-button\" to=\"/returning\">Returning User</Link>\n                    <Link className=\"navbar-button primary\" to=\"/admin\">Dashboard</Link>\n                </div>\n            </nav>\n        </div>\n    );\n};\n\nexport default Navbar;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n// import '../sass/EventsContainer.scss';\n// import '../sass/EventsContainer-media-queries.scss';\n\nconst DashboardEvents = (props) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [events, setEvents] = useState([]);\n    const [isError, setIsError] = useState(false);\n\n    async function fetchData() {\n        try {\n            const res = await fetch(\"/api/events\");\n            const resJson = await res.json();\n\n            setEvents(resJson);\n        } catch(error) {\n            alert(error);\n        }\n    }\n\n    useEffect(() => {\n        fetchData();\n\n    }, []);\n\n    return (\n        <div className=\"flexcenter-container\">\n            <div className=\"events-list\">\n                <ul>\n                    {events.map((event, index) => {\n                        return (\n                            <li key={index}>\n                                <div key={index} className=\"event\">\n                                    <h4>{event.name}</h4>\n                                    <Link to={`/event/${event._id}`}>Details</Link>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n        </div>\n    )\n};\n\nexport default DashboardEvents;\n    ","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport DashboardEvents from '../components/DashboardEvents';\n\nconst AdminDashboard = (props) => {\n    // const [isLoading, setIsLoading] = useState(false);\n    // const [event, setEvent] = useState([]);\n    // const [isError, setIsError] = useState(null);\n\n    // async function fetchData() {\n    //     try {\n    //         const res = await fetch(`http://localhost:4000/api/events/${props.match.params.id}`);\n    //         const resJson = await res.json();\n    //         setEvent(resJson);\n    //     } catch(error) {\n    //         setIsError(error);\n    //         alert(error);\n    //     }\n    // }\n\n    useEffect(() => {\n        // fetchData();\n\n    }, []);\n\n    return (\n        <div className=\"flex-container\">\n            <div className=\"dashboard\">\n                <div className=\"events\">\n                    <h3>Your Events:</h3>\n                    <DashboardEvents />\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default AdminDashboard;\n    ","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst UserDashboard = (props) => {\n    // const [isLoading, setIsLoading] = useState(false);\n    // const [event, setEvent] = useState([]);\n    // const [isError, setIsError] = useState(null);\n\n    // async function fetchData() {\n    //     try {\n    //         const res = await fetch(`http://localhost:4000/api/events/${props.match.params.id}`);\n    //         const resJson = await res.json();\n    //         setEvent(resJson);\n    //     } catch(error) {\n    //         setIsError(error);\n    //         alert(error);\n    //     }\n    // }\n\n    useEffect(() => {\n        // fetchData();\n\n    }, []);\n\n    return (\n        <div className=\"flex-container\">\n            <div className=\"dashboard\">\n                <h3>Your Volunteer Journey</h3>\n                <div className=\"events\">\n                    Profile\n                </div>\n                <div className=\"events\">\n                    Events\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default UserDashboard;\n    ","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nimport '../sass/Event.scss';\n// import '../sass/Event-media-queries.scss';\n\nconst Event = (props) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [event, setEvent] = useState([]);\n    const [isCheckInReady, setIsCheckInReady] = useState();\n    // const [isError, setIsError] = useState(null);\n    // const [selected, setSelected] = useState('checkIns');\n    // const [rsvps, setRsvps] = useState([]);\n\n\n    // const rsvpRef = useRef(null);\n\n    // async function fetchRsvps() {\n    //     try {\n    //         const res = await fetch(`http://localhost:4000/api/rsvps/checkInTrue/${props.match.params.id}`);\n    //         const resJson = await res.json();\n    //         console.log(resJson);\n    //         setRsvps(resJson);\n    //     } catch(error) {\n    //         setIsError(error);\n    //     }\n    // }\n\n    // async function setCheckInReady() {\n    //     try {\n    //         const res = await fetch(`http://localhost:4000/api/rsvps/checkInTrue/${props.match.params.id}`);\n    //         const resJson = await res.json();\n    //         console.log(resJson);\n    //         setRsvps(resJson);\n    //     } catch(error) {\n    //         setIsError(error);\n    //     }\n    // }\n\n    async function fetchEvent() {\n        \n        try {\n            const res = await fetch(`/api/events/${props.match.params.id}`);\n            const resJson = await res.json();\n            \n            setEvent(resJson);\n            setIsCheckInReady(resJson.checkInReady);\n\n        } catch(error) {\n            // setIsError(error);\n        }\n    }\n\n    async function setCheckInReady(e) {\n        e.preventDefault();\n        \n        try {\n            // const payload = { checkInReady: true };\n\n            await fetch(`/api/events/${props.match.params.id}`, {\n                method: 'PATCH',\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                // body: JSON.stringify(payload)\n            })\n                .then(response => {\n                    if (response.ok) {\n                        setEvent(event);\n                        setIsCheckInReady(!isCheckInReady);\n                    }\n                });\n\n        } catch(error) {\n            // setIsError(error);\n            setIsLoading(!isLoading);\n        }\n    }\n\n    useEffect(() => {\n        fetchEvent();\n        // fetchRsvps();\n    }, [isLoading, isCheckInReady]);\n\n    return (\n        <div className=\"flex-container\">\n            <div className=\"event\">\n                {event && event.location ? (\n                    <div className=\"event-headers\">\n                        <h4>{event.name}</h4>\n                        {/* <h5>RSVP's: {event.rsvps.length}</h5> */}\n                        <p>{event.date}</p>\n                        <p>{event.location.city}</p>\n                        <p>{event.location.state}</p>\n                    </div>\n                    ) : (\n                        <div>Loading...</div>\n                    )\n                }\n\n                <div className=\"set-checkin-button\">    \n                    {event && isCheckInReady === false ? \n                        (\n                            <Link \n                                to={`/events/${event._id}`}\n                                onClick={e => setCheckInReady(e)}>\n                                    OPEN\n                            </Link>\n                        ) : (\n                            <Link \n                                to={`/events/${event._id}`}\n                                onClick={e => setCheckInReady(e)}>\n                                    CLOSE\n                            </Link>\n                        )\n                    }\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Event;\n    ","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../sass/ReadyEvents.scss';\n// import '../sass/SelectCheckIn-media-queries.scss';\n\nconst ReadyEvents = (props) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [events, setEvents] = useState([]);\n    // const [isError, setIsError] = useState(null);\n\n    async function fetchEvent() {\n        try {\n            setIsLoading(true);\n            const res = await fetch(\"/api/events?checkInReady=true\");\n            const resJson = await res.json();\n\n            setEvents(resJson);\n            setIsLoading(false);\n        } catch(error) {\n            console.log(error);\n            setIsLoading(false);\n            // setIsError(error);\n            // alert(error);\n        }\n    }\n\n    useEffect(() => {\n        fetchEvent();\n\n    }, []);\n\n    return (\n        <div className=\"flex-container\">\n            <h3>Events to check-in for below:</h3>\n            {isLoading ? <div>Loading...</div> : (\n                <div className=\"event-container\">\n                    {events.length > 0 ? (events.map((event, index) => (\n                        <div key={index} className=\"event\">\n                            <div className=\"event-headers\">\n                                <h4>{event.name}</h4>\n                                <p>{event.date}</p>\n                                <p>{event.location.city}</p>\n                                <p>{event.location.state}</p>\n                            </div>\n\n                            {props.newUser ? (\n                                <Link to={`/checkIn/newUser`} className=\"checkin-newuser-button\">New User Check-In</Link>\n                            ) : null}\n\n                            {props.returningUser ? (\n                                <Link  to={`/checkIn/returningUser`} className=\"checkin-newuser-button\">Returning User Check-In</Link>\n                            ) : null}\n                        </div>\n                    ))) : (\n                        <div>Check back later...</div>\n                    )}\n                </div>\n            )}\n        </div>\n    )\n};\n\nexport default ReadyEvents;\n    ","import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n\nimport ReadyEvents from '../components/ReadyEvents';\n\n// import '../sass/EventContainer.scss';\n// import '../sass/EventContainer-media-queries.scss';\n\nconst NewUser = (props) => {\n    // const [isLoading, setIsLoading] = useState(false);\n    // const [event, setEvent] = useState([]);\n    // const [isError, setIsError] = useState(null);\n    const [newUser, setNewUser] = useState(true);\n\n    // async function fetchData() {\n    //     try {\n    //         const res = await fetch(`http://localhost:4000/api/events/${props.match.params.id}`);\n    //         const resJson = await res.json();\n    //         setEvent(resJson);\n    //     } catch(error) {\n    //         setIsError(error);\n    //         alert(error);\n    //     }\n    // }\n\n    useEffect(() => {\n        // fetchData();\n\n    }, []);\n\n    return (\n        <div className=\"flex-container\">\n            <div className=\"new\">\n                <div className=\"new-headers\">\n                    <h3>Welcome!</h3>\n                    <h4>Thanks for coming.</h4>\n\n                    <ReadyEvents newUser={newUser}/>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default NewUser; ","import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n\nimport ReadyEvents from '../components/ReadyEvents';\n\n// import '../sass/HomeContainer.scss';\n// import '../sass/HomeContainer-media-queries.scss';\n\nconst ReturningUser = (props) => {\n    // const [isLoading, setIsLoading] = useState(false);\n    // const [event, setEvent] = useState([]);\n    // const [isError, setIsError] = useState(null);\n    const [returningUser, setNewUser] = useState(true);\n\n\n    // async function fetchData() {\n    //     try {\n    //         const res = await fetch(`http://localhost:4000/api/events/${props.match.params.id}`);\n    //         const resJson = await res.json();\n    //         setEvent(resJson);\n    //     } catch(error) {\n    //         setIsError(error);\n    //         alert(error);\n    //     }\n    // }\n\n    useEffect(() => {\n        // fetchData();\n\n    }, []);\n\n    return (\n        <div className=\"flex-container\">\n            <div className=\"returning\">\n                <div className=\"returning-headers\">\n                    <h3>Welcome Back!</h3>\n                    <h4>We're happy to see you</h4>\n\n                    <ReadyEvents returningUser={returningUser}/>\n                </div>\n                \n                \n            </div>\n        </div>\n    )\n};\n\nexport default ReturningUser;\n    ","import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n\n\n// import '../sass/HomeContainer.scss';\n// import '../sass/HomeContainer-media-queries.scss';\n\nconst AdminLogin = (props) => {\n    // const [isLoading, setIsLoading] = useState(false);\n    // const [event, setEvent] = useState([]);\n    // const [isError, setIsError] = useState(null);\n\n    // async function fetchData() {\n    //     try {\n    //         const res = await fetch(`http://localhost:4000/api/events/${props.match.params.id}`);\n    //         const resJson = await res.json();\n    //         setEvent(resJson);\n    //     } catch(error) {\n    //         setIsError(error);\n    //         alert(error);\n    //     }\n    // }\n\n    useEffect(() => {\n        // fetchData();\n\n    }, []);\n\n    return (\n        <div className=\"flexcenter-container\">\n            <div className=\"adminlogin\">\n                <div className=\"adminlogin-headers\">\n                    <h3>Welcome Back!</h3>\n                    <h4>Please login below.</h4>\n                </div>\n                <div className=\"adminlogin-buttons\">\n                    {/* <Link to={'/new'}>New</Link>\n                    <Link to={'/returning'}>Returning</Link>\n                </div>\n                <div className=\"login-button\">\n                    <Link to={'/login'}>Login</Link> */}\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default AdminLogin;\n    ","import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n\nimport '../sass/CheckIn.scss';\n\nconst CheckInForm = (props) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [events, setEvents] = useState([]);\n    const [questions, setQuestions] = useState([]);\n    // const [isError, setIsError] = useState(null);\n    const [newOrReturning, setNewOrReturning] = useState(props && props.match.params.userType);\n    const [formInput, setFormInput] = useState({ \n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        currentRole: \"\",\n        desiredRole: \"\",\n        answer: \"\"\n    });\n\n    const fetchEvent = async () => {\n        try {\n            setIsLoading(true);\n            const res = await fetch(\"/api/events?FormReady=true\");\n            const resJson = await res.json();\n\n            setEvents(resJson);\n            setIsLoading(false);\n        } catch(error) {\n            console.log(error);\n            setIsLoading(false);\n            // setIsError(error);\n            // alert(error);\n        }\n    }\n\n    const fetchQuestions = async () => {\n        try {\n            setIsLoading(true);\n            const res = await fetch(\"/api/questions\");\n            const resJson = await res.json();\n\n            setQuestions(resJson);\n            console.log(questions);\n            setIsLoading(false);\n        } catch(error) {\n            console.log(error);\n            setIsLoading(false);\n            // setIsError(error);\n            // alert(error);\n        }\n    }\n\n    const handleInputChange = (e) => setFormInput({\n        ...formInput,\n        [e.currentTarget.name]: e.currentTarget.value\n    });\n\n    const submitForm = (userForm) => {\n        const formToSubmit = JSON.stringify(userForm);\n\n        // Remove empty values, then submit form to db ? \n        \n        // fetch('/api/users', {\n        //     method: \"POST\",\n        //     body: JSON.stringify(formToSubmit),\n        //     headers: {\n        //         \"Content-Type\": \"application/json\"\n        //     }\n        // })\n        //     .then(res => {\n        //         if (res.ok) {\n        //             return res.ok;\n        //         }\n        //         throw new Error(res.statusText);\n        //     })\n        //     .catch(err => {\n        //         console.log(error);\n        //     });\n        \n        console.log(formToSubmit);\n        console.log('Submitting form!');\n    }\n\n    const checkInNewUser = async (e) => {\n        e.preventDefault();\n\n        try {\n            setIsLoading(true);\n\n            // First, create a new user in the user collection\n            // return userId for next step\n            // const res = await fetch(\"/api/checkIn\", { method: 'POST' });\n\n\n            // Second, create new checkIn using userId\n            // const res = await fetch(\"/api/checkIn\", { method: 'POST' });\n            // const resJson = await res.json();\n            \n            // setResponse ? \n\n            submitForm(formInput);\n\n            console.log('Checking in New User');\n\n            setIsLoading(false);\n\n            props.history.push('/magicLink');\n\n        } catch(error) {\n            console.log(error);\n            setIsLoading(false);\n            // setIsError(error);\n            // alert(error);\n        }\n    }\n\n    const checkInReturningUser = async (e) => {\n        e.preventDefault();\n\n        try {\n            setIsLoading(true);\n\n            // Get userId from auth cookie (JWT) => return it in response\n            // fetch to create checkin using userId\n\n            // const res = await fetch(\"/api/checkIn\", { method: 'POST' });\n            // const resJson = await res.json();\n            // \n            // setResponse ? \n\n            submitForm(formInput);\n\n            console.log('Checking in Returning User');\n\n            setIsLoading(false);\n            \n            // Redirect \n            props.history.push('/user');\n\n        } catch(error) {\n            console.log(error);\n            setIsLoading(false);\n            // setIsError(error);\n            // alert(error);\n        }\n    }\n\n    useEffect(() => {\n        fetchEvent();\n        fetchQuestions();\n\n    }, []);\n\n    return (\n        <div className=\"flex-container\">\n            {newOrReturning === 'returningUser' ? (\n                <div className=\"check-in-container\">\n                    <div className=\"check-in-headers\">\n                        <h3>Welcome Back!</h3>\n                        <h4>Answer a quick question to unlock the check-in button!</h4>\n                    </div>\n                    <div className=\"check-in-form\">\n                        <form className=\"form-returning\" onSubmit={e => e.preventDefault()}>\n                            <div className=\"form-input-text\">\n                                <input \n                                    placeholder=\"\"\n                                    type=\"text\"\n                                    name=\"answer\"\n                                    value={formInput.answer}\n                                    aria-label=\"topic\"\n                                    onChange={handleInputChange}\n                                /> \n                            </div>\n                            {!isLoading ? (\n                                <div className=\"form-row\">\n                                    <div className=\"form-input-button\">\n                                        <button type=\"submit\" className=\"form-check-in-submit\" onClick={e => checkInReturningUser(e)}>\n                                                Check In\n                                        </button>\n                                    </div>\n                                </div>\n                            ) : (\n                                <div className=\"form-row\">\n                                    <div className=\"form-input-button\">\n                                        <button type=\"submit\" className=\"form-check-in-submit\" onClick={e => e.preventDefault()}>\n                                                Checking In...\n                                        </button>\n                                    </div>\n                                </div>\n                            )}\n                        </form>\n                    </div>\n                </div>\n            ) : null}\n\n            {newOrReturning === 'newUser' ? (\n                <div className=\"check-in-container\">\n                    <div className=\"check-in-headers\">\n                        <h3>Welcome!</h3>\n                        <h4>Tell us a little bit about yourself!</h4>\n                    </div>\n                    <div className=\"check-in-form\">\n                        <form className=\"form-check-in\" onSubmit={e => e.preventDefault()}>\n                            <div className=\"form-row\">\n                                <div className=\"form-input-text\">\n                                    <label htmlFor=\"first-name\">First Name</label>\n                                    <input \n                                        type=\"text\"\n                                        name=\"firstName\"\n                                        value={formInput.firstName.toString()}\n                                        aria-label=\"topic\"\n                                        onChange={handleInputChange}\n                                    /> \n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-input-text\">\n                                    <label htmlFor=\"last-name\">Last Name</label>\n                                    <input \n                                        type=\"text\"\n                                        name=\"lastName\"\n                                        value={formInput.lastName.toString()}\n                                        aria-label=\"topic\"\n                                        onChange={handleInputChange}\n                                    /> \n                                </div>\n                            </div>\n                            <div className=\"form-row\">\n                                <div className=\"form-input-text\">\n                                    <label htmlFor=\"email\">Email Address</label>\n                                    <input \n                                        type=\"email\"\n                                        name=\"email\"\n                                        value={formInput.email.toString()}\n                                        aria-label=\"topic\"\n                                        onChange={handleInputChange}\n                                    /> \n                                </div>\n                                <p>{\"(This allows easy use of the app. We'll never sell your data!)\"}</p>\n                            </div>\n\n                            {questions ? (\n                                questions.forEach(question => {\n                                    return (\n                                        <div className=\"form-row\">\n                                            <div className=\"form-input-text\">\n                                                <label htmlFor=\"current-role\">{question.questionText}</label>\n                                                <input \n                                                    type=\"text\"\n                                                    name=\"currentRole\"\n                                                    value={formInput.currentRole.toString()}\n                                                    aria-label=\"topic\"\n                                                    onChange={handleInputChange}\n                                                /> \n                                            </div>\n                                        </div>\n                                    );\n                                })\n                            ) : (null)}\n\n                            {!isLoading ? (\n                                <div className=\"form-row\">\n                                    <div className=\"form-input-button\">\n                                        <button type=\"submit\" className=\"form-check-in-submit\" onClick={e => checkInNewUser(e)}>\n                                                Check In\n                                        </button>\n                                    </div>\n                                </div>\n                            ) : (\n                                <div className=\"form-row\">\n                                    <div className=\"form-input-button\">\n                                        <button type=\"submit\" className=\"form-check-in-submit\" onClick={e => e.preventDefault()}>\n                                                Checking In...\n                                        </button>\n                                    </div>\n                                </div>\n                            )}\n                        </form>\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n};\n\nexport default CheckInForm;\n    ","import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n\nimport '../sass/MagicLink.scss';\n\nconst MagicLink = (props) => {\n    // const [isLoading, setIsLoading] = useState(false);\n    // const [event, setEvent] = useState([]);\n    // const [isError, setIsError] = useState(null);\n    const [magicLink, setMagicLink] = useState('https://localhost:3000/api/happyURLfuntime');\n\n    // async function fetchData() {\n    //     try {\n    //         const res = await fetch(`http://localhost:4000/api/events/${props.match.params.id}`);\n    //         const resJson = await res.json();\n    //         setEvent(resJson);\n    //     } catch(error) {\n    //         setIsError(error);\n    //         alert(error);\n    //     }\n    // }\n\n    function forwardRequest() {\n        return props.history.push('/user');\n    }\n\n    useEffect(() => {\n        // fetchData();\n\n        setTimeout(forwardRequest\n        , 5000);\n\n\n\n    }, []);\n\n    return (\n        <div className=\"flex-container\">\n            <div className=\"new\">\n                <div className=\"new-headers\">\n                    <h3>Magic Link Sent</h3>\n                    <h4>You gotta go click it!</h4>\n                    <h5>You'll be returned to a page containing a brand spanking new user profile all to yourself!</h5>\n\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default MagicLink; ","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Navbar from './components/Navbar';\nimport AdminDashboard from './pages/AdminDashboard';\nimport UserDashboard from './pages/UserDashboard';\nimport Event from './pages/Event';\nimport NewUser from './pages/NewUser';\nimport ReturningUser from './pages/ReturningUser';\nimport AdminLogin from './pages/AdminLogin';\nimport CheckInForm from './pages/CheckInForm';\nimport MagicLink from './pages/MagicLink';\n\nimport './App.scss';\n\nconst routes = [\n\t{ path: '/', name: 'home', Component: Home },\n\t{ path: '/admin', name: 'admindashboard', Component: AdminDashboard },\n\t{ path: '/user', name: 'userdashboard', Component: UserDashboard },\n\t{ path: '/event/:id', name: 'event', Component: Event },\n\t{ path: '/new', name: 'new', Component: NewUser },\n\t{ path: '/returning', name: 'returning', Component: ReturningUser },\n\t{ path: '/login', name: 'login', Component: AdminLogin },\n\t{ path: '/checkIn/:userType', name: 'checkIn', Component: CheckInForm },\n\t{ path: '/magicLink', name: 'magicLink', Component: MagicLink },\n\t\n];\n\nfunction App() {\n  return (\n    <div className=\"app\">\n\t\t<div className=\"app-container\">\n\t\t\t<Navbar />\n\t\t\t<main role=\"main\" className=\"main\">\n\t\t\t\t{routes.map(({ path, Component }) => (\n\t\t\t\t\t<Route key={path} exact path={path} component={Component} />\n\t\t\t\t))}\n\t\t\t</main>\n\t\t</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}